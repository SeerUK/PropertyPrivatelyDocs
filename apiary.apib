FORMAT: 1A
HOST: http://api.propertyprivately.co/

# Property Privately API

The Property Privately API is based on REST principles, with support for HAL. This API is part of the product for the final year project and dissertation of Elliot Wright for BSc ICT S/w route. 

This API is designed to contain the main concepts of REST, and standards that go with REST to aid in API consumption such as HAL in order to practically investigate their application in modern web services.

All resource paths should require the least amount of information possible to represent a resource. That is to say that if you want to see a property for example; you'd only need the property ID, thus; `/properties/:propId`. If however you wanted to see all of the properties of a user, you would have to have the username, and the property ID, thus: `/user/:user/properties/:propId`.

**NOTE**: A valid application secret is required to browse the production API. For resources the require full authentication please also specify a valid API key (user token) for the application being used to consume the API. (Please see User -> User Tokens Collection -> Create a Token)

## Common Responses

* `200 OK` - The request was successful.
* `201 Created` - The request has been fulfilled, and a resource has been created.
* `204 No Content` - The request was successful, but there is no representation to return.
* `400 Bad Request` - The request could not be fulfilled because it's requirements were not met.
* `401 Unauthorized` - An authentication attempt has failed.
* `403 Forbidden` - The user currently authenticated does not have permission to use the resource.
* `404 Not Found` - Resource was not found.
* `500 Internal Server Error` - There has been a problem internally.

# Group Root

The root is the starting point for the API. When used with a HAL browser it makes getting started with the API exceptionally easy. It links to all of the main sections of the API.

## Root [/]
### Retrieve Directory [GET]

+ Response 200 (application/hal+json)
    + Body
    
            {
                "_links": {
                    "self": {
                        "href": "/"
                    },
                    "pp:auth": {
                        "href": "/auth"
                    },
                    "pp:applications": {
                        "href": "/applications"
                    },
                    "pp:properties": {
                        "href": "/properties"
                    },
                    "pp:sales": {
                        "href": "/sales"
                    },
                    "pp:user": {
                        "href": "/user"
                    },
                    "pp:users": {
                        "href": "/users"
                    }
                }
            }

# Group Authentication

To authenticate with the API you first need to retrieve an API user token for the application you're currently using. Before authenticating with the API you must have a valid, enabled application token. 

## Authenticate [/auth]
### Create a User Token [POST]

+ Request (application/json)
    + Header
    
            X-API-App-Token: Application token 

    + Body
    
            { "username": "User123", "password": "Password123" }

+ Response 201 (application/hal+json)
    + Body
    
            {
                "id": 1,
                "token": "USER_TOKEN_TOKEN",
                "created": "YYYY-MM-DDTHH:MM:SSZ",
                "enabled": true,
                "_links": {
                    "self": {
                        "href": "/user/tokens/1"
                    },
                    "token:application": {
                        "href": "/applications/1"
                    },
                    "token:user": {
                        "href": "/user"
                    }
                },
                "_embedded": {
                    "application": {
                        "id": 1,
                        "name": "APPLICATION_NAME",
                        "description": "APPLICATION_DESCRIPTION",
                        "created": "YYYY-MM-DDTHH:MM:SSZ",
                        "enabled": true,
                        "_links": {
                            "self": {
                                "href": "/applications/1"
                            }
                        }
                    }
                }
            }

# Group User

Resources related to the currently authenticated user. If you are not authenticated you will recieve a `403 Forbidden`.

## User [/user]

+ Model (application/hal+json)
    + Body
    
            {
                "id": 1,
                "username": "USER_USERNAME",
                "email": "USER_EMAIL",
                "created": "YYYY-MM-DDTHH:MM:SSZ",
                "enabled": true,
                "name": "USER_NAME",
                "location": "USER_LOCATION",
                "roles": [
                    {
                        "name": "ROLE_NAME",
                        "role": "ROLE_ROLE"
                    }
                ],
                "_links": {
                    "self": {
                        "href": "/user"
                    },
                    "user:applications": {
                        "href": "/user/applications"
                    },
                    "user:properties": {
                        "href": "/user/properties"
                    },
                    "user:sales": {
                        "href": "/user/sales"
                    },
                    "user:tokens": {
                        "href": "/user/tokens"
                    }
                }
            }

### Retrieve the authenticated User [GET]

+ Request
    + Header
    
            X-API-App-Token: Application token
            X-API-User-Token: User token

+ Response 200

    [User][]

### Update the authenticated User [PATCH]

Properties available to update:

| Path     | Type   | Required | Value Example     | Description              |
|----------|--------|----------|-------------------|--------------------------|
| name     | string | false    | Jon Snow          | The real name of a user  |
| location | string | false    | South of the Wall | The location of the user |

+ Request (application/json)
    + Header
    
            X-API-App-Token: Application token
            X-API-User-Token: User token

    + Body
    
            {
                "name": "Jon Snow",
                "location": "South of the Wall"
            }

+ Response 200 (application/hal+json)

    [User][]

## Applications Collection [/user/applications]
### List the authenticated User's Applications [GET]

+ Request
    + Header
    
            X-API-App-Token: Application token
            X-API-User-Token: User token

+ Response 200 (application/hal+json)
    + Body
    
            {
                "total" 1,
                "_links": {
                    "self": {
                        "href": "/user/applications"
                    },
                    "applications:application": {
                        "href": "/applications/{id}",
                        "templated": true,
                        "name": "Specific Application"
                    }
                },
                "_embedded": {
                    "applications": [
                        {
                            "id": 1,
                            "name": "USER_APPLICATION_NAME",
                            "description": "USER_APPLICATION_DESCRIPTION",
                            "token": "USER_APPLICATION_TOKEN",
                            "created": "YYYY-MM-DDTHH:MM:SSZ",
                            "enabled": true,
                            "_links": {
                                "self": {
                                    "href": "/applications/1"
                                }
                            }
                        }
                    ]
                }
            }

## Properties Collection [/user/properties]
### List the authenticated User's Properties [GET]

+ Request
    + Header
    
            X-API-App-Token: Application token
            X-API-User-Token: User token

+ Response 200 (application/hal+json)
    + Body 
    
            {
                "total" 1,
                "_links": {
                    "self": {
                        "href": "/user/properties"
                    },
                    "properties:property": {
                        "href": "/properties/{id}",
                        "templated": true,
                        "name": "Specific Property"
                    }
                },
                "_embedded": {
                    "properties": [
                        {
                            "id": 1,
                            "title": "PROPERTY_NAME",
                            "description": "PROPERTY_DESCRIPTION",
                            "created": "YYYY-MM-DDTHH:MM:SSZ",
                            "buildingName": "ADDRESS_BUILDING_NAME",
                            "address1": "ADDRESS_LINE_1",
                            "address2": "ADDRESS_LINE_2",
                            "town": "ADDRESS_TOWN",
                            "postcode": "ADDRESS_POSTCODE",
                            "_links": {
                                "self": {
                                    "href": "/properties/1"
                                }
                            }
                        }
                    ]
                }
            }

## Sales Collectrion [/user/sales]
### List the authenticated User's Sales [GET]

+ Request
    + Header
    
            X-API-App-Token: Application token
            X-API-User-Token: User token

+ Response 200 (application/hal+json)
    + Body
    
            {
                "total": 1,
                "_links": {
                    "self": {
                        "href": "/users/USER_USERNAME/sales"
                    }
                },
                "_embedded": {
                    "sales": [
                        {
                            "id": 1,
                            "price": SALE_PRICE,
                            "start": "YYYY-MM-DDTHH:MM:SSZ",
                            "end": "YYYY-MM-DDTHH:MM:SSZ",
                            "created": "YYYY-MM-DDTHH:MM:SSZ",
                            "enabled": true,
                            "active": true,
                            "_links": {
                                "self": {
                                    "href": "/sales/1"
                                }
                            }
                        }
                    ]
                }
            }

## Tokens Collection [/user/tokens{?application}]

+ Parameters
    + application (optional, number, `1`) ... Numeric `id` of the Application to perform action with.

### List the authenticated User's Tokens [GET]

+ Request
    + Header
    
            X-API-App-Token: Application token
            X-API-User-Token: User token

+ Response 200 (application/hal+json)
    + Body
    
            {
                "total": 1,
                "_links": {
                    "self": {
                        "href": "/user/tokens"
                    },
                    "tokens:application": {
                        "href": "/user/tokens?application={id}",
                        "templated": true,
                        "name": "Tokens filtered by Application"
                    },
                    "tokens:token": {
                        "href": "/user/tokens/{id}",
                        "templated": true,
                        "name": "Specific Token"
                    }
                },
                "_embedded": {
                    "tokens": [
                        {
                            "id": 1,
                            "token": "USER_TOKEN_TOKEN",
                            "created": "YYYY-MM-DDTHH:MM:SSZ",
                            "enabled": true,
                            "_links": {
                                "self": {
                                    "href": "/user/tokens/1"
                                },
                                "token:application": {
                                    "href": "/applications/1"
                                },
                                "token:user": {
                                    "href": "/users/USER_USERNAME"
                                }
                            },
                            "_embedded": {
                                "application": {
                                    "id": 1,
                                    "name": "APPLICATION_NAME",
                                    "description": "APPLICATION_DESCRIPTION",
                                    "created": "YYYY-MM-DDTHH:MM:SSZ",
                                    "enabled": true,
                                    "_links": {
                                        "self": {
                                            "href": "/applications/1"
                                        }
                                    }
                                }
                            }
                        }
                    ]
                }
            }

### Remove the authenticated User's Tokens [DELETE]

+ Request
    + Header
    
            X-API-App-Token: Application token
            X-API-User-Token: User token

+ Response 204

## Token [/user/tokens/{id}]

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Token to perform action with.

+ Model (application/hal+json)
    + Body
    
            {
                "id": 1,
                "token": "USER_TOKEN_TOKEN",
                "created": "YYYY-MM-DDTHH:MM:SSZ",
                "enabled": true,
                "_links": {
                    "self": {
                        "href": "/user/tokens/1"
                    },
                    "token:application": {
                        "href": "/applications/1"
                    },
                    "token:user": {
                        "href": "/users/USER_USERNAME"
                    }
                },
                "_embedded": {
                    "application": {
                        "id": 1,
                        "name": "APPLICATION_NAME",
                        "description": "APPLICATION_DESCRIPTION",
                        "created": "YYYY-MM-DDTHH:MM:SSZ",
                        "enabled": true,
                        "_links": {
                            "self": {
                                "href": "/applications/1"
                            }
                        }
                    }
                }
            }

### Retrieve an authenticated User's Token [GET]

+ Request
    + Header
    
            X-API-App-Token: Application token
            X-API-User-Token: User token

+ Response 200
    
    [Token][]

### Remove an authenticated User's Token [DELETE]

+ Request
    + Header
    
            X-API-App-Token: Application token
            X-API-User-Token: User token

+ Response 204

# Group Users

Public resources related to users. Collections in this section only contain publically accessible resources.

## Root [/users]
### Retrieve Directory [GET]

+ Response 200 (application/hal+json)
    + Body
    
            {
                "_links": {
                    "self": {
                        "href": "/users"
                    },
                    "users:user": {
                        "href": "/users/{username}",
                        "templated": true
                    }
                }
            }

### Create a User [POST]

Request body parameters:

| Name     | Type   | Required | Value Example | Description         |
|----------|--------|----------|---------------|---------------------|
| username | string | true     | User123       | User username       |
| email    | string | true     | abc@def.com   | User email address  |
| password | string | true     | Password123   | User password       |

+ Request (application/json)
    + Header
    
            X-API-App-Token: Application token

    + Body
    
            {
                "username": "USER_USERNAME",
                "email": "USER_EMAIL",
                "password": "USER_PASSWORD"
            }

+ Response 201 (application/hal+json)
    + Body
    
            {
                "id": 1,
                "username": "USER_USERNAME",
                "email": "USER_EMAIL",
                "created": "YYYY-MM-DDTHH:MM:SSZ",
                "enabled": true,
                "name": "PERSON_NAME",
                "location": "PERSON_LOCATION",
                "roles": [
                    {
                        "name": "ROLE_NAME",
                        "role": "ROLE_ROLE"
                    }
                ],
                "_links": {
                    "self": {
                        "href": "/users/USER_USERNAME"
                    },
                    "users:sales": {
                        "href": "/users/USER_USERNAME/sales"
                    }
                }
            }

## User [/users/{username}]

+ Parameters
    + username (required, string, `User123`) ... String `username` of the User to perform action with.

### Retrieve a User [GET]

+ Response 200 (application/hal+json)
    + Body
    
            {
                "id": 1,
                "username": "USER_USERNAME",
                "email": "USER_EMAIL",
                "created": "YYYY-MM-DDTHH:MM:SSZ",
                "enabled": true,
                "name": "PERSON_NAME",
                "location": "PERSON_LOCATION",
                "roles": [
                    {
                        "name": "ROLE_NAME",
                        "role": "ROLE_ROLE"
                    }
                ],
                "_links": {
                    "self": {
                        "href": "/users/USER_USERNAME"
                    },
                    "users:properties": {
                        "href": "/users/USER_USERNAME/properties"
                    }
                }
            }

## User Sales Collection [/user/{username}/sales]

+ Parameters
    + username (required, string, `User123`) ... String `username` of the User to perform action with.

### Retrieve a User's Sales [GET]

+ Response 200 (application/hal+json)
    + Body
    
            {
                "total": 1,
                "_links": {
                    "self": {
                        "href": "/users/USER_USERNAME/sales"
                    }
                },
                "_embedded": {
                    "sales": [
                        {
                            "id": 1,
                            "price": SALE_PRICE,
                            "start": "YYYY-MM-DDTHH:MM:SSZ",
                            "end": "YYYY-MM-DDTHH:MM:SSZ",
                            "created": "YYYY-MM-DDTHH:MM:SSZ",
                            "enabled": true,
                            "active": true,
                            "_links": {
                                "self": {
                                    "href": "/sales/1"
                                }
                            }
                        }
                    ]
                }
            }

# Group Applications

Public resources related to applications.

## Root [/applications]
### Retrieve Directory [GET]

+ Response 200 (application/hal+json)
    + Body
    
            {
                "_links": {
                    "self": {
                        "href": "/applications"
                    },
                    "applications:application": {
                        "href": "/applications/{id}",
                        "templated": true
                    }
                }
            }

### Create an Application [POST]

Request body parameters:

| Name        | Type    | Required | Value Example | Description         |
|-------------|---------|----------|---------------|---------------------|
| name        | string  | true     | Test app      | App name            |
| description | string  | false    | Test app desc | App description     |
| enabled     | boolean | false    | true          | If app is enabled   |

+ Request (application/json)
    + Header
    
            X-API-App-Token: Application token
            X-API-User-Token: User token

    + Body
    
            {
                "name": "APPLICATION_NAME",
                "description": "APPLICATION_DESCRIPTION"
            }

+ Response 201 (application/hal+json)
    + Body
    
            {
                "id": 1,
                "name": "APPLICATION_NAME",
                "description": "APPLICATION_DESCRIPTION",
                "token": "APPLICATION_TOKEN",
                "created": "YYYY-MM-DDTHH:MM:SSZ",
                "enabled": true,
                "_links": {
                    "self": {
                        "href": "/applications/1"
                    }
                }
            }

## Application [/applications/{id}]

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Application to perform action with.

+ Model (application/hal+json)
    + Body
    
            {
                "id": 1,
                "name": "APPLICATION_NAME",
                "description": "APPLICATION_DESCRIPTION",
                "token": "APPLICATION_TOKEN",
                "created": "YYYY-MM-DDTHH:MM:SSZ",
                "enabled": true,
                "_links": {
                    "self": {
                        "href": "/applications/1"
                    }
                }
            }

### Retrieve an Application [GET]

*NOTE*: Authentication is not required for this resource, therefore the request headers do not *need* to be sent. For security; if the consumer of the API is authenticated as the owner of an Application the `token` of the Application will be displayed in the response. Otherwise, no `token` field shall be present.

+ Request
    + Header
    
            X-API-App-Token: Application token
            X-API-User-Token: User token

+ Response 200 

    [Application][]

### Update an Application [PATCH]

Request body parameters:

| Name        | Type    | Required | Value Example | Description         |
|-------------|---------|----------|---------------|---------------------|
| name        | string  | false    | Test app      | App name            |
| description | string  | false    | Test app desc | App description     |
| enabled     | boolean | false    | true          | If app is enabled   |

+ Request (application/json)
    + Header
    
            X-API-App-Token: Application token
            X-API-User-Token: User token

    + Body
    
            {
                "name": "APPLICATION_NAME",
                "description": "APPLICATION_DESCRIPTION",
                "enabled": false
            }

+ Response 200 

    [Application][]


### Remove an Application [DELETE]

+ Request
    + Header
    
            X-API-App-Token: Application token
            X-API-User-Token: User token

+ Response 204

# Group Properties

Public and private resource related to Property entities.

## Root [/properties]
### Retrieve Directory [GET]

+ Response 200 (application/hal+json)
    + Body
    
            {
                "_links": {
                    "self": {
                        "href": "/properties"
                    },
                    "properties:property": {
                        "href": "/properties/{id}",
                        "templated": true
                    }
                }
            }

### Create a Property [POST]

Request body parameters:

| Name         | Type    | Required | Value Example  | Description            |
|--------------|---------|----------|----------------|------------------------|
| title        | string  | true     | Test prop      | Property name          |
| description  | string  | true     | Test prop desc | Property description   |
| buildingName | string  | false    | Building name  | Address building name  |
| address1     | string  | true     | 1 Fake Road    | Address address line 1 |
| address2     | string  | false    | Fakeville      | Address address line 2 |
| town         | string  | true     | Faketown       | Address town           |
| postcode     | string  | true     | FK101AB        | Address postcode       |

+ Request (application/json)
    + Header
    
            X-API-App-Token: Application token
            X-API-User-Token: User token

    + Body
    
            {
                "title": "PROPERTY_TITLE",
                "description": "PROPERTY_DESCRIPTION",
                "buildingName": "ADDRESS_BUILDING_NAME",
                "address1": "ADDRESS_LINE_1",
                "address2": "ADDRESS_LINE_2",
                "town": "ADDRESS_TOWN",
                "postcode": "ADDRESS_POSTCODE",
            }

+ Response 201 (application/hal+json)
    + Body
    
            {
                "id": 1,
                "title": "PROPERTY_TITLE",
                "description": "PROPERTY_DESCRIPTION",
                "created": "YYYY-MM-DDTHH:MM:SSZ",
                "buildingName": "ADDRESS_BUILDING_NAME",
                "address1": "ADDRESS_LINE_1",
                "address2": "ADDRESS_LINE_2",
                "town": "ADDRESS_TOWN",
                "postcode": "ADDRESS_POSTCODE",
                "_links": {
                    "self": {
                        "href": "/properties/1"
                    },
                    "property:images": {
                        "href": "/properties/1/images"
                    },
                    "property:sales": {
                        "href": "/properties/1/sales"
                    }
                }
            }

## Property [/properties/{id}]

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Property to perform action with.

+ Model (application/hal+json)
    + Body
    
            {
                "id": 1,
                "title": "PROPERTY_TITLE",
                "description": "PROPERTY_DESCRIPTION",
                "created": "YYYY-MM-DDTHH:MM:SSZ",
                "buildingName": "ADDRESS_BUILDING_NAME",
                "address1": "ADDRESS_LINE_1",
                "address2": "ADDRESS_LINE_2",
                "town": "ADDRESS_TOWN",
                "postcode": "ADDRESS_POSTCODE",
                "_links": {
                    "self": {
                        "href": "/properties/1"
                    },
                    "property:images": {
                        "href": "/properties/1/images"
                    },
                    "property:sales": {
                        "href": "/properties/1/sales"
                    }
                }
            }

### Retrieve a Property [GET]

+ Response 200

    [Property][]

### Update a Property [PATCH]

Request body parameters:

| Name         | Type    | Required | Value Example  | Description            |
|--------------|---------|----------|----------------|------------------------|
| title        | string  | true     | Test prop      | Property name          |
| description  | string  | true     | Test prop desc | Property description   |
| buildingName | string  | false    | Building name  | Address building name  |
| address1     | string  | true     | 1 Fake Road    | Address address line 1 |
| address2     | string  | false    | Fakeville      | Address address line 2 |
| town         | string  | true     | Faketown       | Address town           |
| postcode     | string  | true     | FK101AB        | Address postcode       |

+ Request (application/json)
    + Header
    
            X-API-App-Token: Application token
            X-API-User-Token: User token

    + Body
    
            {
                "title": "PROPERTY_TITLE",
                "description": "PROPERTY_DESCRIPTION"
            }

+ Response 200

    [Property][]

### Remove an Property [DELETE]

+ Request
    + Header
    
            X-API-App-Token: Application token
            X-API-User-Token: User token

+ Response 204